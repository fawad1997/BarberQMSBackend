"""BArber Schedule Changes

Revision ID: 717763e284e8
Revises: 44e64a3028e5
Create Date: 2024-11-26 07:30:28.718914

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '717763e284e8'
down_revision: Union[str, None] = '44e64a3028e5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('barber_schedules', sa.Column('day_of_week', sa.Integer(), nullable=False))
    op.create_unique_constraint('uix_barber_day', 'barber_schedules', ['barber_id', 'day_of_week'])
    op.drop_column('barber_schedules', 'is_available')
    op.drop_column('barber_schedules', 'schedule_type')
    op.drop_column('barber_schedules', 'date')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('barber_schedules', sa.Column('date', sa.DATE(), autoincrement=False, nullable=False))
    op.add_column('barber_schedules', sa.Column('schedule_type', postgresql.ENUM('WORKING', 'BREAK', 'OFF', name='scheduletype'), autoincrement=False, nullable=True))
    op.add_column('barber_schedules', sa.Column('is_available', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.drop_constraint('uix_barber_day', 'barber_schedules', type_='unique')
    op.drop_column('barber_schedules', 'day_of_week')
    # ### end Alembic commands ###
